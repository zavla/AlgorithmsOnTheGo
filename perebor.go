package main

import "math"

//BruteForceMaxValue находит набор предметов из m так чтобы их масса была меньше limit,
//а стоимость максимально возможной.
//m - массы предметов
//c - стоиомости предметов
//limit - предел ограничение общей массы набора предметов.
//
func BruteForceMaxValue(m, c []int, limit int) int {
	n := len(m)
	_2n := int(math.Pow(2, float64(n)))
	maxS := 0
	//1010101 - взять\не взять. Всего возможных наборов 2**n.
	//получаем номер набора, из номера набора используем биты.
	for nabor := 1; nabor < _2n; nabor++ {
		s := 0 //сумма стоимостей каждого набора
		w := 0 //вес каждого набора
		//получаем бит для каждого предмета, 1й бит, 2й бит\предмет
		for item := 0; item < n; item++ {
			mask := 1 << item
			bit := nabor & mask
			if bit > 0 {
				//предмет в наборе выбран
				//добавим его значение к общ сумме набора
				w += m[item]
				s += c[item]
				if w > limit {
					break //набор уже превысил лимит
				}
			}
		}
		if w <= limit && maxS < s {
			maxS = s
		}
	}
	return maxS
}
