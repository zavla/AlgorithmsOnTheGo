//наибольшая возрастающая последовательность
//Largest Increasing Subsequance LIS
package main

//веруть размер наибольшей возрастающей подпоследовательности
func LIS(a []int) (int, []int) {
	// L[i] = это размер наиб послед-ти для части длинной i которая заканчивается на цифреилисимволе i-м по счету
	//т.е. L[i] = это размер возрастающей послед-ти которая закончилась на i символе

	L := make([]int, len(a))

	for i := 0; i < len(a); i++ {
		predmax := L[0]
		for j := 0; j < i; j++ {
			if a[j] < a[i] && //т.е. мы в принципе можем продожить эту последовательность
				predmax < L[j] { //и размер полед-ти которая закончилась на j самый большой
				predmax = L[j]
			}
		}
		L[i] = predmax + 1
	}
	//в L размеры возрастающих последовательностей для подстрок которые закончились на i
	//максимальная из них - это максимальная для всей нашей последовательности
	predmax := L[0]
	for i := 0; i < len(L); i++ {
		if predmax < L[i] {
			predmax = L[i]

		}
	}
	return predmax, nil
}
